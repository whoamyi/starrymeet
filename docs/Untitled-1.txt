To reach the level of realism + complexity + scalability you want for StarryMeet, each celebrity must be stored in a normalized backend database structure with clean separation of concerns. That means one table is not enoughâ€”you need multiple relational tables that work together.
Below is exactly what tables and what fields (rows/columns) each table must have to support:
Individual celebrity profiles
Dynamic availability with city rotation logic
Physical + virtual meeting types
Real-time slot management
Card + profile frontend data
Tier system (hidden backend logic)
Pricing, reviews, verification, status
Future scalability (search, SEO, filters)
âœ… Database Tables Overview (Minimum Structure)
TablePurposecelebritiesStatic identity + profile infocelebrity_mediaPhotos/videoscelebrity_pricingMeeting pricing logiccelebrity_availabilityIndividual generated slotscelebrity_location_poolRotating physical meeting location poolcelebrity_reviewsSocial proofcelebrity_settingsTiers, caps, scarcity backend settingsbookingsFuture user bookingscitiesList of cities used globallycategoriesProfession tags (Actor, Musician, etc.) 
ðŸ”¥ Detailed Table Structure
1. celebrities (Core identity record)
This is the main profile record for each celebrity.
ColumnTypePurposeidUUIDPrimary keynameStringCelebrity full nameslugString (unique)Used in profile URLcategory_idFKLink to professioncountryStringOrigin country (not used for availability)bioTextShort bioverifiedBooleanâœ… badgeavatar_urlStringMain card/profile photomin_priceDecimalLowest meeting pricereview_rateDecimale.g. 4.7review_countInte.g. 1703statusEnumactive / paused / hiddencreated_atTimestampupdated_atTimestamp 
2. celebrity_settings (Backend logic settings)
Hidden from frontendâ€”controls availability agent.
ColumnPurposecelebrity_id (FK)tierEnum top/pro/high/standardmax_monthly_slotsIntslot_scarcity_modeEnum (ultra, low, medium, high)timezoneStringallow_virtualBooleanallow_physicalBooleanrotation_cooldown_daysInt 
3. celebrity_location_pool
Pool of approved cities per celebrity for physical meetings.
ColumnPurposecelebrity_id (FK)city_id (FK)priority_weightInt (for probability of selection)last_usedDateavoid_home_country â†’ Always enforced 
4. celebrity_availability
Holds actual meeting slots generated by agent.
ColumnPurposeidcelebrity_id (FK)meeting_type (physical or virtual)city_id (nullable for virtual)datestart_timeduration_minutesstatus (active, expired, booked, hidden)slot_group_idGroup related time slotsprice_override (optional) 
5. celebrity_pricing
Supports multi-duration pricing logic.
ColumnPurposemeeting_typeduration15/30/60pricecurrency 
6. celebrity_reviews
For social proof.
ColumnPurposereview_rate_averagereview_countreview_snippet 
âœ… Data Summary Per Celebrity
Each celebrity will have:
TableApprox. Recordscelebrities1 rowcelebrity_settings1 rowcelebrity_pricing3â€“6 rowscelebrity_location_pool12â€“40 rowscelebrity_availability0â€“50 active slots/monthcelebrity_reviews1 summary rowcelebrity_media1â€“3 rows