Claude ‚Äî listen up and do this properly. No more guessing, no more desktop styles shoved into tiny phones. I want the browse cards and profile pages rebuilt to behave like a social feed (Facebook/Instagram) on mobile and like a compact, layered luxury profile on the celebrity page. I‚Äôm going to spell every selector, size, and behavior so you can implement it exactly. Don‚Äôt improvise. If you need to change a token name, change it everywhere.


---

1 ‚Äî High-level goal (one sentence)

Make the browse page feel like a social feed (dense, scannable, tappable), and make the profile page feel like a social profile with multi-layered availability (location ‚Üí date/time units ‚Üí reveal price + request). Emphasize exclusivity and discovery, not price.


---

2 ‚Äî Global responsive rules (the master switches)

Implement these breakpoints and behaviors exactly:

Mobile / small: @media (max-width: 720px) ‚Äî single column feed. Cards are compact, thumb-friendly.

Tablet: @media (min-width: 721px) and (max-width: 1023px) ‚Äî two-column grid.

Desktop: @media (min-width: 1024px) ‚Äî grid or multi-column layout.


Use token-driven spacing: --pad-sm, --pad, --pad-lg. Do not hardcode other paddings per page.


---

3 ‚Äî Browse cards: structure, spacing, sizes, selectors

HTML structure (semantic):

<article class="card">
  <div class="card__media"> <!-- initials or portrait -->
    <div class="card__initials">AR</div>
    <button class="card__fav" aria-pressed="false"></button>
    <!-- optional tier chip: <span class="card__tier">S</span> -->
  </div>

  <div class="card__body">
    <h3 class="card__name">Addison Rae</h3>
    <div class="card__meta">
      <span class="card__profession">Digital Creator</span>
      <span class="card__availability-chip">üìç Paris ‚Ä¢ üéüÔ∏è 3</span>
    </div>

    <div class="card__stats">
      <span class="card__rating">‚òÖ 4.8</span>
      <span class="card__price-badge" aria-hidden="true">$12,500+</span> <!-- visual only -->
    </div>
  </div>
</article>

CSS rules (mobile-first, exact values):

.card:

width: 100%; (mobile)

display: flex; flex-direction: row; gap: 12px;

padding: 12px; border-radius: 16px; background: var(--surface-weak); border:1px solid var(--border-weak);

box-shadow: 0 8px 20px rgba(0,0,0,0.45); transition: transform 0.28s var(--motion-curve), box-shadow 0.28s var(--motion-curve);


.card:hover { transform: translateY(-4px); box-shadow: var(--shadow-accent); }

.card__media:

flex: 0 0 72px; height: 72px; border-radius: 12px; display:flex; align-items:center; justify-content:center; background: linear-gradient(...neutral...);

initials font 24‚Äì28px weight 600, color var(--text-primary).


.card__body { flex: 1; display:flex; flex-direction:column; gap:6px; }

.card__name { font-size: 16px; font-weight:600; color: var(--text-primary); line-height:1.1 }

.card__profession { font-size:12px; color: var(--text-secondary) }

.card__availability-chip:

small pill style: font-size:12px; padding:6px 8px; border-radius:999px; background: rgba(197,168,115,0.03); color: var(--text-secondary);

use üéüÔ∏è instead of the word slot; show numeric only.


.card__stats:

small row: rating left, price badge right; price badge is decorative only and lower-visual-priority:

price badge: font-size:13‚Äì14px; font-weight:600; color:var(--accent-base); background: rgba(197,168,115,0.03); padding:6px 8px; border-radius:10px;



Important behavior / rules:

Cards must be denser: reduce vertical padding from the current oversized values to 12px body padding, 72px media.

On mobile show one card per full row (full width). On tablet, two columns. On desktop, grid as before.

The price badge is passive ‚Äî not a CTA. Make it visually weaker than name and availability.

Verified badge: small inline icon svg next to name, filled gold or subtle blue? Use small blue check (social feel) with no bordered capsule. Selector: .verified ‚Äî width:16px;height:16px; margin-left:6px;



---

4 ‚Äî Profile page layout: selectors & exact structure

High-level layout

Top: .profile-header (portrait circle 112px, name, small verified mark, follow button)

Middle: .profile-highlights (carousel or small chips)

Next: .profile-bio (two lines collapsed, expand to full)

Then: .profile-stats (rating, meetings count) ‚Äî small cards horizontally scrollable if needed

Core: .availability ‚Äî this is where you must implement the multi-layer collapsible logic.


HTML skeleton for availability:

<section class="availability">
  <div class="availability__location" data-location-id="paris">
    <button class="availability__location-toggle">üìç Paris <span class="availability__count">üéüÔ∏è 3</span></button>
    <div class="availability__units"> <!-- hidden by default -->
      <div class="availability__unit" data-unit-id="u1">
        <button class="unit__toggle">May 24 ‚Ä¢ 10:00 AM ‚Ä¢ 30 min</button>
        <div class="unit__detail"> <!-- hidden by default -->
          <div class="unit__price">$1,200</div>
          <button class="unit__request btn--outline">Request</button>
        </div>
      </div>
      <!-- more units -->
    </div>
  </div>

  <div class="availability__virtual" data-day="May 27">
    <button class="availability__location-toggle">üíª May 27 <span class="availability__count">üéüÔ∏è 2</span></button>
    <div class="availability__units">...</div>
  </div>
</section>

Behavioral rules (must be implemented):

1. Level 1 - Location/Day (always visible); shows icon + name + ticket count üéüÔ∏è N. Selector: .availability__location-toggle.

Tapping opens .availability__units (accordion expand). Only one location open at a time (optional: allow multiple, but default single).



2. Level 2 - Units list (date/time/duration) ‚Äî each item .availability__unit shows line text only. Tapping expands that .unit__detail.

Important: On Level 2 expansion do NOT show price inline. Price is in the next layer.



3. Level 3 - .unit__detail reveals price and the Request button. This is the only place price and CTA live.

The Request button triggers booking flow. Price is visually subdued but readable: use --accent-base for number but keep background subtle.



4. Default state: all .availability__units collapsed. This preserves exclusivity.



Exact CSS (values):

.availability__location-toggle:

display:flex; justify-content:space-between; align-items:center; padding:14px; font-size:15px; font-weight:600; border-radius:12px; background: var(--surface-weak); border:1px solid var(--border-weak);


.availability__units { display:none; margin-top:8px; gap:8px; }

.availability__unit .unit__toggle { width:100%; text-align:left; padding:12px; font-size:14px; color:var(--text-primary); background:var(--bg-panel); border-radius: 10px; }

.unit__detail { display:none; padding:10px; margin-top:6px; background: rgba(255,255,255,0.01); border-radius:10px; }

.unit__price { color:var(--accent-base); font-weight:600; font-size:15px; }

.unit__request.btn--outline { border:1.5px solid rgba(215,185,114,0.12); color:var(--accent-cta); background:transparent; padding:8px 12px; border-radius: 10px; }


JS behavior (clear):

Attach event listeners:

.availability__location-toggle ‚Üí toggle .availability__units. Add aria-expanded.

.unit__toggle ‚Üí toggle .unit__detail. Add aria-expanded.


Accessibility: manage focus, aria-expanded, and keyboard enter/space support.



---

5 ‚Äî Profile typography and visual weights (exact values)

.profile__name (mobile): font-size:20px; font-weight:700; color: var(--text-primary);

Verified badge: inline 16px SVG, margin-left:8px.

.profile__bio collapsed: show first 2 lines (use line-clamp:2), expand on tap.

.profile__stat cards: small pills 84px √ó 56px, background var(--surface-weak), rounded 12px.



---

6 ‚Äî Social features (must include)

Follow button: .btn--follow ‚Äî primary outline style (not gold filled); toggles to Following state with subtle filled background (rgba(197,168,115,0.06)).

Share: small icon in header.

Notifications: when Request is pressed, show a toast "Request sent" and keep the user in the profile with a small badge animation on the header (not a full redirect).

Verified: use .verified icon (small blue filled check) next to name. No big bordered pill.



---

7 ‚Äî Visual priority rules (what to emphasize, and what to hide)

Emphasize: Name, follow action, availability location/day (Level 1). Use white for name.

Secondary: Profession, rating chips, number of tickets (üéüÔ∏è).

Hide or de-emphasize: Price (only shown in layer 3), tiers badges (small corner chip only), country of birth (do not show on card ‚Äî only meeting location is allowed).



---

8 ‚Äî Specific fixes you must apply (no excuses)

Cards are too big: shrink card internal paddings to the values above. Change cards from flex-direction: column to row on mobile so image+text are side-by-side ‚Äî denser feed look.

Desktop styles applied on mobile: ensure grid/desktop CSS wrapped in @media (min-width:1024px) only.

Replace ‚Äúslot‚Äù text: use üéüÔ∏è icon across all UI. If code references slot variable, leave it in backend, but present üéüÔ∏è in DOM.

Price visibility: remove price from card main view. Keep price badge optional and visually weaker. On profile: price only visible inside .unit__detail.

Availability hierarchy: convert package-first layout to location ‚Üí units ‚Üí price. Re-map existing package selectors to this structure. (If the database gives packages only, map packages into units grouped by location/date).



---

9 ‚Äî Implementation mapping for Claude (practical steps)

1. Audit HTML templates: find card markup, profile markup, and all availability outputs.


2. Create shared components / utilities: .card, .profile-header, .availability (single source of truth in CSS).


3. Refactor data rendering: ensure server or template groups packages by location ‚Üí date ‚Üí time. If DB schema gives package arrays, convert in template to grouped units before rendering.


4. Update CSS tokens: use :root tokens previously defined.


5. Add JS accordion: simple accessible toggles as described.


6. Test: mobile viewport 360px and 412px, keyboard nav, and low-contrast mode. Use Lighthouse.


7. Iterate: fix spacing until two cards appear per screen on tablet, one dense row on mobile.




---

10 ‚Äî Final non-negotiables

No page should define its own .card or .availability visual values; everything must use tokenized selectors.

On mobile, the feed must be dense: side-by-side media + text, not huge stacked blocks.

Price is a secondary reveal. If you keep pricing visible anywhere by default, you failed the brief.



---

Do this like a product engineer who knows how people scroll with their thumb ‚Äî fast, economical, and slightly hungry. Don‚Äôt come back with ‚ÄúI tried‚Äù or ‚Äúit looks different on my screen.‚Äù Implement and report back with the changed template paths and a screenshot of mobile feed showing at least two cards in the viewport (one row) and an opened availability location showing collapsed units.